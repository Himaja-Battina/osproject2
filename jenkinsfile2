pipeline {
  agent any

  stages {
    stage('Login to OpenShift Cluster') {
      steps {
        //withCredentials([string(credentialsId: 'ocp-server-url', variable: 'OCP_SERVER_URL'),
                                  //string(credentialsId: 'cluster-auth-token', variable: 'CLUSTER_AUTH_TOKEN')]){
        script {
          

       try{   
      def token="sha256~pX_cUctyGLnmxdO3FVAniiQXKCq65piEZYQEApaA2bM"
      def url="https://api.1cld-ocp6.pok.stglabs.ibm.com:6443"
      
        // def response_code=sh(script:'curl -k -H -w  `%{response_code}`  "Authorization: Bearer sha256~pX_cUctyGLnmxdO3FVAniiQXKCq65piEZYQEApaA2bM" "https://api.1cld-ocp6.pok.stglabs.ibm.com:6443"',returnStatus:true)        
      // def response_code = sh(script:"curl -k -I -o /dev/null -s -w '%{response_code}' -H 'Authorization: Bearer sha256~pX_cUctyGLnmxdO3FVAniiQXKCq65piEZYQEApaA2bM' 'https://api.1cld-ocp6.pok.stglabs.ibm.com:6443'",returnStatus: true)
       def response_code = sh(script: "curl -k -I -o /dev/null -s -w '%{response_code}' -H 'Authorization: Bearer sha256~pX_cUctyGLnmxdO3FVAniiQXKCq65piEZYQEApaA2bM' https://api.1cld-ocp6.pok.stglabs.ibm.com:6443", returnStatus: true)
        if (response_code == 0) {
            //error 'Failed to retrieve response code from $url'
        }
    } catch (Exception ex) {
        error "Error executing curl command: ${ex.message}"
    }
 
          if (response_code == 200) {
         
def clusterStatusOutput = sh(script: 'oc --server=$url --token=$token get nodes', returnStdout: true)


if (clusterStatusOutput.contains('Ready')) {
                        

                        try {
  

                        
                            sh 'oc --server=$url --token=$token project newprojectg --insecure-skip-tls-verify && oc --server=$url --token=$token apply -f application-deployment.yaml'
                            // Break out of loop if deployment is successful
                        } catch (Exception e) {
                            // Log error and continue to next cluster
                            echo "Deployment failed on OpenShift cluster 1. Error: ${e}"
                             
                          
                        }
                        }
                
            
            
            else{
         
            echo "Cluster is not ready"
            env.deploy_on_failure = 'true'
            }
          }







           else if (response_code == 401) {
            error "Failed to login to OpenShift cluster. Authentication failed. HTTP response code: ${response_code}"
          } else if (response_code == 503) {
            error "Failed to login to OpenShift cluster. Cluster is down. HTTP response code: ${response_code}"
             echo "Cluster is not ready"
            env.deploy_on_failure = 'true'
          } else {
            error "Failed to login to OpenShift cluster. HTTP response code: ${response_code}"
          }
        }
      //}
    }
    }
  
 stage('deploy to cluster2'){
                    when{
                       anyOf {
                       
            environment name: 'DEPLOY_ON_FAILURE', value: 'true'
        }
        }
                        // Deploy application to OpenShift cluster 2
                        steps{
                        
                                  withCredentials([string(credentialsId: 'openshift-cluster-url-2', variable: 'OPENSHIFT_CLUSTER_URL_2'),
                                  string(credentialsId: 'openshift-cluster-token-2', variable: 'OPENSHIFT_CLUSTER_TOKEN_2')]) {
                            script{
                        try {
                                             
    
                         
                           sh 'oc --server=$OPENSHIFT_CLUSTER_URL_2 --token=$OPENSHIFT_CLUSTER_TOKEN_2 project zfw-jenkins-ocpadmins --insecure-skip-tls-verify && oc --server=$OPENSHIFT_CLUSTER_URL_2 --token=$OPENSHIFT_CLUSTER_TOKEN_2 apply -f application-deployment.yaml'
                            // Break out of loop if deployment is successful
                        } catch (Exception e) {
                            // Log error and continue to next cluster
                            echo "Deployment failed on OpenShift cluster 2. Error: ${e}"
                        }
                        // Log error if deployment fails on all clusters
                        
                        }
                        }
                }
                }
  }
}
  

